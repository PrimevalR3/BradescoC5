plugins {
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.21'
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        compileClasspath = test.compileClasspath
        runtimeClasspath = test.runtimeClasspath
        kotlin {
            srcDir "src/integrationTest/kotlin"
        }
        resources {
            srcDir "src/integrationTest/resources"
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.20-RC'
    implementation 'com.konghq:unirest-java:3.14.2'
    implementation 'com.konghq:unirest-objectmapper-jackson:4.0.0-RC7'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger2:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    implementation project(path: ':corda-api')
   // implementation "net.corda:corda-base:5.0.0.763-Iguana1.0"
    implementation "net.corda:corda-base:${cordaApiVersion}"
    implementation 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation "io.cucumber:cucumber-java:7.11.1"
    testImplementation "io.cucumber:cucumber-junit:7.11.1"
    testImplementation "io.cucumber:cucumber-spring:7.11.1"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:7.11.1"
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.2'

    testImplementation 'com.ninja-squad:springmockk:4.0.2'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'io.rest-assured:json-path:5.3.0'
    testImplementation 'io.rest-assured:xml-path:5.3.0'

    testImplementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.1'
    testImplementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'


    implementation('com.google.guava:guava:31.1-jre')
    //implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.0.2.RELEASE'
    implementation('org.hibernate:hibernate-gradle-plugin:5.6.15.Final')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    //implementation 'org.springframework.data:spring-data-jpa:2.0.2.RELEASE'
    implementation 'org.liquibase:liquibase-core:4.20.0'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    //offledger DB
    runtimeOnly 'org.postgresql:postgresql:42.5.4'

}

tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

////test {
////    useJUnitPlatform()
////}
//
//task integrationTest(type: Test) {
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//}

/*task cucumberCli() {
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = sourceSets.integrationTest.runtimeClasspath + sourceSets.integrationTest.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.r3.dc.sandbox.restapi.cucumber',
                    'src/integrationTest/resources']
        }
    }
}*/

task runSpringServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.r3.bol.sandbox.restapi.ServerKt'
    args '-Djavax.net.ssl.trustStore'
}

task runCentralBankApi(type: org.springframework.boot.gradle.tasks.run.BootRun) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.r3.bol.sandbox.restapi.ServerKt"
    systemProperty '--server.port', '8081'
    systemProperty '--spring.profiles.active', 'csd'
    systemProperty '--corda.legal-identity', 'CN=CSD, OU=IT Dept, O=Euroclear, L=London, C=GB'
}

task runWholesaleBankOneApi(type: org.springframework.boot.gradle.tasks.run.BootRun) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.r3.bol.sandbox.restapi.ServerKt"
    systemProperty '--server.port', '8082'
    systemProperty '--spring.profiles.active', 'custodian1'
    systemProperty '--corda.legal-identity', 'CN=Custodian1, OU=IT Dept, O=Custodian1, L=London, C=GB'
}
